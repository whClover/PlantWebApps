@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	@using System.Data;
	// viewdata["title"] = "external repair job history";
}

<div class="row">
	<div class="col-12">
		<div class="card">
			<div class="card-header d-flex justify-content-between">
				<h5 class="card-title">External Repair Job History Form</h5>
				<div class="d-flex" style="gap: 10px;">
					<div>Job ID :</div>
					<div>@(ViewBag.data != null && ViewBag.data.Rows.Count > 0 ? ViewBag.data.Rows[0]["ID"] : "")</div>
				</div>
			</div>
			<ul class="nav nav-tabs" id="myTab" role="tablist">
				<li class="nav-item" role="presentation">
					<button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">1</button>
				</li>
				<li class="nav-item" role="presentation">
					<button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="false">2</button>
				</li>
			</ul>
			<div class="tab-content" id="myTabContent" style="font-size: 12px;">
				<div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">
					<div class="d-flex" style="font-size: 12px;">
						<partial name="Form/_firstColumn.cshtml" />
						<partial name="Form/_secondColumn.cshtml" />
					</div>
				</div>
				<div class="tab-pane fade" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">
					<div class="d-flex" style="font-size: 12px;">
						<partial name="Form/_thirdColumn.cshtml" />
						<partial name="Form/_fourthColumn.cshtml" />
					</div>
				</div>
			</div>
			<div class="d-flex justify-content-end m-3" style="gap: 10px;">
				<button type="button" class="btn btn-primary" style="min-width: 85px;">Change WO</button>
				<button type="button" class="btn btn-primary" disabled style="min-width: 85px;">PRF</button>
				<button type="button" class="btn btn-primary" style="min-width: 85px;">CE</button>
				<button type="button" class="btn btn-primary" style="min-width: 85px;">TAG</button>
				<button type="button" class="btn btn-primary" style="min-width: 85px;">SAVE</button>
				<button type="button" class="btn btn-primary" style="min-width: 85px;">CLOSE</button>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function () {
		// getting data to text from select option
		function getjRepairAlloc() {
			var selectedVal = $("#tRepairAdvice").val();
			var selectedOptionText = $("#tRepairAdvice").find('option:selected').text();
			var dataValue = selectedOptionText.split('|')[1].trim();

			$('#jRepairAllocCalc').text(dataValue);
		};

		function getJobDetailRepairBy() {
			var selectedVal = $("#tRepairByID").find('option:selected').data('tsupplier');
			$('#TSupplier').text(selectedVal);
		}

		function getJobDetailReasonType() {
			var selectedVal = $("#tReasonType").find('option:selected').data('reasontype');
			$('#tReason').val(selectedVal);
		}

		getjRepairAlloc();
		$('#tRepairAdvice').change(function () {
			$('#tCheck').val('1');
			getjRepairAlloc();
			getJobDetailRepairBy();
			getJobDetailReasonType()
			

			if ($('#tRepairAdvice').val() == "CR") {
				var repairType = $("#tReasonType").find('option:selected').data('reasontype');
				var repairTypeData = $("#tReasonType").find('option:selected').data('dbreason');
				var repairByIdCurrentVal = $("#tRepairByID").find('option:selected').data('tsupplier');
				var repairByIdOldtVal = $("#tRepairByID").find('option:selected').data('dbvalue');
				var repairAdvice = $("#tRepairAdvice").find('option:selected').data('jobstatus');
				var swalOptions = {
					title: "Are you sure?",
					html: `
						<div style="font-size: 16px; text-align: center;">
							<div class="d-flex flex-column">
								<div>Repair Type: ${repairType}</div>
								<div>Supplier: ${repairByIdCurrentVal}</div>
								<div>Are you sure you want to change to ${repairAdvice}?</div>
							</div>
						</div>
					`,
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#3085d6",
					cancelButtonColor: "#d33",
					confirmButtonText: "Yes, I'm Sure!"
				};

				if (repairByIdCurrentVal !== repairByIdOldtVal || repairType !== repairTypeData) {
					Swal.fire(swalOptions).then((result) => {
						if (result.dismiss === Swal.DismissReason.cancel) {
							$("#tRepairAdvice").val("");
							$("#tRepairAdvice").trigger("change");
						}
					});
				}
			}

			
		});
	});
</script>